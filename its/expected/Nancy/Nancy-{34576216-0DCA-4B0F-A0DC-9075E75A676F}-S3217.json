{
"version":  "0.1",
"toolInfo":  {
"toolName":  "Microsoft (R) Visual C# Compiler",
"productVersion":  "1.1.0",
"fileVersion":  "1.1.0"
},
"issues":  [
{
"ruleId":  "S3217",
"locations":  [
{
"analysisTarget":  [
{
"uri":  "Nancy\\src\\Nancy\\Json\\JsonSerializer.cs",
"region":  {
"startLine":  398,
"startColumn":  12,
"endLine":  398,
"endColumn":  27
}
}
]
}
],
"shortMessage":  "Either change the type of \"entry\" to \"object\" or iterate on a generic collection of type \"DictionaryEntry\".",
"fullMessage":  "The \"foreach\" statement was introduced in the C# language prior to generics. To make it easier to work with non-generic collections available at that time such as \"ArrayList\", the \"foreach\" statements allows to downcast the collection\u0027s element of type \"Object\" into any other type. The problem is that, to achieve that, the \"foreach\" statements silently performs \"explicit\" type conversion, which at runtime can result in an \"InvalidCastException\" to be thrown. New C# code should use generics and not rely on \"foreach\" statement\u0027s silent \"explicit\" conversions.",
"properties":  {
"severity":  "Warning",
"warningLevel":  "1",
"defaultSeverity":  "Warning",
"title":  "\"Explicit\" conversions of \"foreach\" loops should not be used",
"category":  "Reliability",
"helpLink":  "http://vs.sonarlint.org/rules/index.html#version=1.8.0\u0026ruleId=S3217",
"isEnabledByDefault":  "True",
"isSuppressedInSource":  "False"
}
},
{
"ruleId":  "S3217",
"locations":  [
{
"analysisTarget":  [
{
"uri":  "Nancy\\src\\Nancy\\Routing\\Trie\\Nodes\\CaptureNodeWithMultipleParameters.cs",
"region":  {
"startLine":  104,
"startColumn":  21,
"endLine":  104,
"endColumn":  26
}
}
]
}
],
"shortMessage":  "Either change the type of \"match\" to \"object\" or iterate on a generic collection of type \"Match\".",
"fullMessage":  "The \"foreach\" statement was introduced in the C# language prior to generics. To make it easier to work with non-generic collections available at that time such as \"ArrayList\", the \"foreach\" statements allows to downcast the collection\u0027s element of type \"Object\" into any other type. The problem is that, to achieve that, the \"foreach\" statements silently performs \"explicit\" type conversion, which at runtime can result in an \"InvalidCastException\" to be thrown. New C# code should use generics and not rely on \"foreach\" statement\u0027s silent \"explicit\" conversions.",
"properties":  {
"severity":  "Warning",
"warningLevel":  "1",
"defaultSeverity":  "Warning",
"title":  "\"Explicit\" conversions of \"foreach\" loops should not be used",
"category":  "Reliability",
"helpLink":  "http://vs.sonarlint.org/rules/index.html#version=1.8.0\u0026ruleId=S3217",
"isEnabledByDefault":  "True",
"isSuppressedInSource":  "False"
}
}
]
}

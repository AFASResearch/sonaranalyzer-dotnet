{
"version":  "0.1",
"toolInfo":  {
"toolName":  "Microsoft (R) Visual C# Compiler",
"productVersion":  "1.1.0",
"fileVersion":  "1.1.0"
},
"issues":  [
{
"ruleId":  "S2339",
"locations":  [
{
"analysisTarget":  [
{
"uri":  "Nancy\\src\\Nancy.Testing\\Accept.cs",
"region":  {
"startLine":  11,
"startColumn":  28,
"endLine":  11,
"endColumn":  32
}
}
]
}
],
"shortMessage":  "Change this constant to a \"static\" read-only property.",
"fullMessage":  "Constant members are copied at compile time to the call sites, instead of being fetched at runtime. This means that you should use constants to hold values that by definition will never change, such as \"Zero\". In practice, those cases are uncommon, and therefore it is generally better to avoid constant members.",
"properties":  {
"severity":  "Warning",
"warningLevel":  "1",
"defaultSeverity":  "Warning",
"title":  "Public constant members should not be used",
"category":  "Reliability",
"helpLink":  "http://vs.sonarlint.org/rules/index.html#version=1.10.0\u0026ruleId=S2339",
"isEnabledByDefault":  "False",
"isSuppressedInSource":  "False"
}
},
{
"ruleId":  "S2339",
"locations":  [
{
"analysisTarget":  [
{
"uri":  "Nancy\\src\\Nancy.Testing\\Accept.cs",
"region":  {
"startLine":  17,
"startColumn":  28,
"endLine":  17,
"endColumn":  32
}
}
]
}
],
"shortMessage":  "Change this constant to a \"static\" read-only property.",
"fullMessage":  "Constant members are copied at compile time to the call sites, instead of being fetched at runtime. This means that you should use constants to hold values that by definition will never change, such as \"Zero\". In practice, those cases are uncommon, and therefore it is generally better to avoid constant members.",
"properties":  {
"severity":  "Warning",
"warningLevel":  "1",
"defaultSeverity":  "Warning",
"title":  "Public constant members should not be used",
"category":  "Reliability",
"helpLink":  "http://vs.sonarlint.org/rules/index.html#version=1.10.0\u0026ruleId=S2339",
"isEnabledByDefault":  "False",
"isSuppressedInSource":  "False"
}
},
{
"ruleId":  "S2339",
"locations":  [
{
"analysisTarget":  [
{
"uri":  "Nancy\\src\\Nancy.Testing\\Accept.cs",
"region":  {
"startLine":  23,
"startColumn":  28,
"endLine":  23,
"endColumn":  32
}
}
]
}
],
"shortMessage":  "Change this constant to a \"static\" read-only property.",
"fullMessage":  "Constant members are copied at compile time to the call sites, instead of being fetched at runtime. This means that you should use constants to hold values that by definition will never change, such as \"Zero\". In practice, those cases are uncommon, and therefore it is generally better to avoid constant members.",
"properties":  {
"severity":  "Warning",
"warningLevel":  "1",
"defaultSeverity":  "Warning",
"title":  "Public constant members should not be used",
"category":  "Reliability",
"helpLink":  "http://vs.sonarlint.org/rules/index.html#version=1.10.0\u0026ruleId=S2339",
"isEnabledByDefault":  "False",
"isSuppressedInSource":  "False"
}
},
{
"ruleId":  "S2339",
"locations":  [
{
"analysisTarget":  [
{
"uri":  "Nancy\\src\\Nancy.Testing\\Accept.cs",
"region":  {
"startLine":  29,
"startColumn":  28,
"endLine":  29,
"endColumn":  31
}
}
]
}
],
"shortMessage":  "Change this constant to a \"static\" read-only property.",
"fullMessage":  "Constant members are copied at compile time to the call sites, instead of being fetched at runtime. This means that you should use constants to hold values that by definition will never change, such as \"Zero\". In practice, those cases are uncommon, and therefore it is generally better to avoid constant members.",
"properties":  {
"severity":  "Warning",
"warningLevel":  "1",
"defaultSeverity":  "Warning",
"title":  "Public constant members should not be used",
"category":  "Reliability",
"helpLink":  "http://vs.sonarlint.org/rules/index.html#version=1.10.0\u0026ruleId=S2339",
"isEnabledByDefault":  "False",
"isSuppressedInSource":  "False"
}
},
{
"ruleId":  "S2339",
"locations":  [
{
"analysisTarget":  [
{
"uri":  "Nancy\\src\\Nancy.Testing\\BrowserContextMultipartFormData.cs",
"region":  {
"startLine":  11,
"startColumn":  28,
"endLine":  11,
"endColumn":  47
}
}
]
}
],
"shortMessage":  "Change this constant to a \"static\" read-only property.",
"fullMessage":  "Constant members are copied at compile time to the call sites, instead of being fetched at runtime. This means that you should use constants to hold values that by definition will never change, such as \"Zero\". In practice, those cases are uncommon, and therefore it is generally better to avoid constant members.",
"properties":  {
"severity":  "Warning",
"warningLevel":  "1",
"defaultSeverity":  "Warning",
"title":  "Public constant members should not be used",
"category":  "Reliability",
"helpLink":  "http://vs.sonarlint.org/rules/index.html#version=1.10.0\u0026ruleId=S2339",
"isEnabledByDefault":  "False",
"isSuppressedInSource":  "False"
}
},
{
"ruleId":  "S2339",
"locations":  [
{
"analysisTarget":  [
{
"uri":  "Nancy\\src\\Nancy.Testing\\TestingViewFactory.cs",
"region":  {
"startLine":  50,
"startColumn":  28,
"endLine":  50,
"endColumn":  37
}
}
]
}
],
"shortMessage":  "Change this constant to a \"static\" read-only property.",
"fullMessage":  "Constant members are copied at compile time to the call sites, instead of being fetched at runtime. This means that you should use constants to hold values that by definition will never change, such as \"Zero\". In practice, those cases are uncommon, and therefore it is generally better to avoid constant members.",
"properties":  {
"severity":  "Warning",
"warningLevel":  "1",
"defaultSeverity":  "Warning",
"title":  "Public constant members should not be used",
"category":  "Reliability",
"helpLink":  "http://vs.sonarlint.org/rules/index.html#version=1.10.0\u0026ruleId=S2339",
"isEnabledByDefault":  "False",
"isSuppressedInSource":  "False"
}
},
{
"ruleId":  "S2339",
"locations":  [
{
"analysisTarget":  [
{
"uri":  "Nancy\\src\\Nancy.Testing\\TestingViewFactory.cs",
"region":  {
"startLine":  54,
"startColumn":  28,
"endLine":  54,
"endColumn":  36
}
}
]
}
],
"shortMessage":  "Change this constant to a \"static\" read-only property.",
"fullMessage":  "Constant members are copied at compile time to the call sites, instead of being fetched at runtime. This means that you should use constants to hold values that by definition will never change, such as \"Zero\". In practice, those cases are uncommon, and therefore it is generally better to avoid constant members.",
"properties":  {
"severity":  "Warning",
"warningLevel":  "1",
"defaultSeverity":  "Warning",
"title":  "Public constant members should not be used",
"category":  "Reliability",
"helpLink":  "http://vs.sonarlint.org/rules/index.html#version=1.10.0\u0026ruleId=S2339",
"isEnabledByDefault":  "False",
"isSuppressedInSource":  "False"
}
},
{
"ruleId":  "S2339",
"locations":  [
{
"analysisTarget":  [
{
"uri":  "Nancy\\src\\Nancy.Testing\\TestingViewFactory.cs",
"region":  {
"startLine":  58,
"startColumn":  28,
"endLine":  58,
"endColumn":  38
}
}
]
}
],
"shortMessage":  "Change this constant to a \"static\" read-only property.",
"fullMessage":  "Constant members are copied at compile time to the call sites, instead of being fetched at runtime. This means that you should use constants to hold values that by definition will never change, such as \"Zero\". In practice, those cases are uncommon, and therefore it is generally better to avoid constant members.",
"properties":  {
"severity":  "Warning",
"warningLevel":  "1",
"defaultSeverity":  "Warning",
"title":  "Public constant members should not be used",
"category":  "Reliability",
"helpLink":  "http://vs.sonarlint.org/rules/index.html#version=1.10.0\u0026ruleId=S2339",
"isEnabledByDefault":  "False",
"isSuppressedInSource":  "False"
}
},
{
"ruleId":  "S2339",
"locations":  [
{
"analysisTarget":  [
{
"uri":  "Nancy\\src\\Nancy.Testing\\TestingViewFactory.cs",
"region":  {
"startLine":  62,
"startColumn":  28,
"endLine":  62,
"endColumn":  38
}
}
]
}
],
"shortMessage":  "Change this constant to a \"static\" read-only property.",
"fullMessage":  "Constant members are copied at compile time to the call sites, instead of being fetched at runtime. This means that you should use constants to hold values that by definition will never change, such as \"Zero\". In practice, those cases are uncommon, and therefore it is generally better to avoid constant members.",
"properties":  {
"severity":  "Warning",
"warningLevel":  "1",
"defaultSeverity":  "Warning",
"title":  "Public constant members should not be used",
"category":  "Reliability",
"helpLink":  "http://vs.sonarlint.org/rules/index.html#version=1.10.0\u0026ruleId=S2339",
"isEnabledByDefault":  "False",
"isSuppressedInSource":  "False"
}
}
]
}
